########################################################################
# DEPLOYMENT - MCP Context-Forge (Gateway)
#
# - Spins up the HTTP / WebSocket gateway pods.
# - Injects release-scoped hosts for Postgres & Redis.
# - Pulls ALL other environment variables from the dedicated
#   ConfigMap + Secret via envFrom (mounted later in this file).
# - DATABASE_URL and REDIS_URL are declared LAST so that every
#   $(POSTGRES_*) / $(REDIS_*) placeholder is already defined.
########################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  # <release>-mcp-stack-mcpgateway
  name: {{ include "mcp-stack.fullname" . }}-mcpgateway
  labels:
    {{- include "mcp-stack.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.mcpContextForge.replicaCount }}

  selector:
    matchLabels:
      app: {{ include "mcp-stack.fullname" . }}-mcpgateway

  template:
    metadata:
      labels:
        app: {{ include "mcp-stack.fullname" . }}-mcpgateway

    spec:
      containers:
        - name: mcp-context-forge
          image: "{{ .Values.mcpContextForge.image.repository }}:{{ .Values.mcpContextForge.image.tag }}"
          imagePullPolicy: {{ .Values.mcpContextForge.image.pullPolicy }}

          # Gateway's internal port
          ports:
            - containerPort: {{ .Values.mcpContextForge.containerPort }}

          ################################################################
          # EXPLICIT ENV-VARS
          # - DB/cache endpoints must be set here so they can be used as
          #   placeholders in the derived URL variables declared below.
          ################################################################
          env:
            # ---------- POSTGRES ----------
            - name: POSTGRES_HOST
              value: {{ .Values.mcpContextForge.env.postgres.host | default (printf "%s-postgres" (include "mcp-stack.fullname" .)) }}
            - name: POSTGRES_PORT
              value: "{{ .Values.mcpContextForge.env.postgres.port }}"
            - name: POSTGRES_DB
              value: "{{ .Values.mcpContextForge.env.postgres.db }}"
            - name: POSTGRES_SCHEMA
              value: {{ .Values.mcpContextForge.env.postgres.schema | default "public" }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "mcp-stack.postgresSecretName" . | trim }}
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "mcp-stack.postgresSecretName" . | trim }}
                  key: POSTGRES_PASSWORD

            # ---------- REDIS ----------
            - name: REDIS_HOST
              value: {{ printf "%s-redis" (include "mcp-stack.fullname" .) }}
            - name: REDIS_PORT
              value: "{{ .Values.mcpContextForge.env.redis.port }}"

            # ---------- DERIVED URLS ----------
            # These MUST be placed *after* the concrete vars above so the
            # $(...) placeholders are expanded correctly inside the pod.
          {{- if not .Values.mcpContextForge.secret.DATABASE_URL  }}
            - name: DATABASE_URL
              value: >-
                postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)?options=-c%20search_path==$(POSTGRES_SCHEMA)
          {{- end }}

            - name: REDIS_URL
              value: "redis://$(REDIS_HOST):$(REDIS_PORT)/0"

          ################################################################
          # BULK ENV-VARS - pulled from ConfigMap + Secret
          ################################################################
          envFrom:
            - secretRef:
                name: {{ include "mcp-stack.fullname" . }}-gateway-secret
            - configMapRef:
                name: {{ include "mcp-stack.fullname" . }}-gateway-config

          ################################################################
          # HEALTH & READINESS PROBES
          ################################################################
          {{- if .Values.migration.enabled }}
          startupProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - |
                  # Check if migration check already passed
                  if [ -f /tmp/migration_check_done ]; then
                    exit 0
                  fi
                  # Wait for database to be ready (implies migration completed)
                  python3 /app/mcpgateway/utils/db_isready.py --max-tries 1 --interval 1 --timeout 2 || exit 1
                  # Mark check as done to avoid repeated database calls
                  touch /tmp/migration_check_done
                  exit 0
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 10
            failureThreshold: 60    # Allow up to 5 minutes for migration to complete
          {{- else }}
          {{- with .Values.mcpContextForge.probes.startup }}
          startupProbe:
{{- include "helpers.renderProbe" (dict "probe" . "root" $) | nindent 12 }}
          {{- end }}
          {{- end }}

          {{- with .Values.mcpContextForge.probes.readiness }}
          readinessProbe:
{{- include "helpers.renderProbe" (dict "probe" . "root" $) | nindent 12 }}
          {{- end }}

          {{- with .Values.mcpContextForge.probes.liveness }}
          livenessProbe:
{{- include "helpers.renderProbe" (dict "probe" . "root" $) | nindent 12 }}
          {{- end }}

          # Resource requests / limits
          resources:
{{- toYaml .Values.mcpContextForge.resources | nindent 12 }}
